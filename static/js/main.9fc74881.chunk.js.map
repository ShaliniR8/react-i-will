{"version":3,"sources":["Particle.js","components/ListItems.js","components/Button.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Particles","id","className","ListItems","props","items","console","log","key","listItems","map","item","type","value","text","onChange","e","setUpdate","target","onClick","deleteItem","icon","duration","easing","animateButton","classList","remove","add","setTimeout","Button","bubblyButtons","document","getElementsByClassName","i","length","addEventListener","saveItems","Form","state","currentItem","window","performance","navigation","arr","Array","localStorage","x","getItem","parseInt","addItem","bind","handleInput","l","this","setItem","JSON","stringify","preventDefault","newItem","setState","Date","now","filteredItems","filter","removeItem","onSubmit","placeholder","React","Component","library","faCheckCircle","App","Particle","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9fc74881.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Particles(){\r\n    return(\r\n        <div id=\"particles\">\r\n            <div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\t<div className=\"particle\"></div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Particles;","import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    console.log(items.key)\r\n    const listItems = items.map(item =>\r\n   {\r\n       return <div className=\"list\" key={item.key}>\r\n     <p>\r\n         <input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n        <span>\r\n       \r\n        <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n            props.deleteItem(item.key)\r\n        }} icon=\"check-circle\" />\r\n        </span>\r\n     </p>\r\n     \r\n    </div>})\r\n    return <div>\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n        </FlipMove>\r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default ListItems;","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nvar animateButton = function(e) {\r\n\r\n    e.target.classList.remove('animate');\r\n    \r\n    e.target.classList.add('animate');\r\n    setTimeout(function(){\r\n      e.target.classList.remove('animate');\r\n    },700);\r\n  };\r\n  \r\n \r\nfunction Button(props){\r\n    \r\n    var bubblyButtons = document.getElementsByClassName(\"bubbly-button\");\r\n    for (var i = 0; i < bubblyButtons.length; i++) {\r\n      bubblyButtons[i].addEventListener('click', animateButton, false);\r\n    }\r\n  \r\n    \r\n    return( <div>\r\n        <button className=\"bubbly-button\" onClick={()=>props.saveItems()}>&uarr;</button>\r\n    </div>\r\n    )}\r\n\r\n  export default Button;","import React from 'react';\r\nimport ListItems from \"./ListItems\"\r\nimport Button from \"./Button\"\r\n\r\nclass Form extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          items:[],\r\n          currentItem:{\r\n            text:'',\r\n            key:''\r\n          }\r\n        }\r\n        if (window.performance) {\r\n          if (performance.navigation.type == 1) {\r\n          //alert( \"This page is reloaded\" );\r\n          const arr=[...Array(localStorage.length)].map(x => 0);\r\n          for(let i=0;i<localStorage.length;i++){\r\n            this.state={\r\n              currentItem:{\r\n                text:localStorage.getItem( localStorage.key( i ) ),\r\n                key:parseInt(localStorage.key( i ))\r\n              }\r\n            }\r\n            arr[i]=this.state.currentItem\r\n          }\r\n          this.state.items=arr\r\n        }\r\n      }\r\n\r\n\r\n        this.addItem = this.addItem.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setUpdate = this.setUpdate.bind(this);\r\n        this.saveItems=this.saveItems.bind(this)\r\n       \r\n        \r\n  }\r\n\r\n  saveItems(){\r\n    const l=this.state.items.length\r\n    for(let i=0;i<l;i++){\r\n      localStorage.setItem(JSON.stringify(this.state.items[i].key),this.state.items[i].text)\r\n    }\r\n\r\n  }\r\n\r\n  addItem(e){\r\n    e.preventDefault();\r\n    const newItem = this.state.currentItem;\r\n    if(newItem.text !==\"\"){\r\n      const items = [...this.state.items, newItem];\r\n      \r\n    this.setState({\r\n      items: items,\r\n      currentItem:{\r\n        text:'',\r\n        key:''\r\n      }\r\n    })\r\n    }\r\n  }\r\n  handleInput(e){\r\n    this.setState({\r\n      currentItem:{\r\n        text: e.target.value,\r\n        key: Date.now()\r\n      }\r\n    })\r\n  }\r\n  deleteItem(key){\r\n    const filteredItems= this.state.items.filter(item =>\r\n      item.key!==key);\r\n    localStorage.removeItem(JSON.stringify(key))\r\n    this.setState({\r\n      items: filteredItems\r\n    })\r\n\r\n  }\r\n  setUpdate(text,key){\r\n    const items = this.state.items;\r\n    items.map(item=>{      \r\n      if(item.key===key){\r\n        item.text= text;\r\n      }\r\n    })\r\n    this.setState({\r\n      items: items\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n          <form id=\"form-todo\" onSubmit={this.addItem}>\r\n            <input type=\"text\" \r\n                placeholder=\"Enter task\" \r\n                value= {this.state.currentItem.text} \r\n                onChange={this.handleInput}></input>\r\n          </form>\r\n          <p>{this.state.items.text}</p>\r\n          <Button saveItems={this.saveItems}></Button>\r\n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\r\n          \r\n          \r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Form","import React from 'react';\nimport './App.css';\nimport Particles from \"./Particle\"\nimport Form from './components/Form'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nlibrary.add(faCheckCircle)\nfunction App(){\n  return (\n  <div id=\"root\" className=\"App\">\n      <Particles/>\n      <h1>I&nbsp;will&nbsp;.&nbsp;</h1>\n      <Form/>\n  </div>\n  )\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}